package com.github.krottv.tmstemp.data.remoteimport com.github.krottv.tmstemp.domain.*class SongRemoteDataSourceFake : SongRemoteDataSource {    override suspend fun getSongs(albumType: AlbumType): SongsJSON {        return when(albumType.contentType) {            ContentType.ITUNES -> getItunesSongs(albumType.albumId)            ContentType.LIBRARY -> getLibrarySongs(albumType.albumId)            ContentType.MY_MUSIC -> getLibrarySongs(albumType.albumId)        }    }    private fun getItunesSongs(albumId: Long): SongsJSON {        val album = AlbumModel(            albumId,            "https://sun9-north.userapi.com/sun9-81/s/v1/ig2/wIL_XF8XNjbnczI7IwIec_w6FmZOxXPJLGrtMVEH7OnXTUqOpY2t_2Qt4wgHBECL8CipxHTG7bxwC35GPpsSMakE.jpg?size=1080x1054&quality=96&type=album",            "Album",            20        )        val tracks = SongModel(            "Various Artist",            "https://sun9-west.userapi.com/sun9-40/s/v1/ig2/h6ZS2hc1nYbspA1WleIwNyYFzZpODOfEGy4PYt0zyBsadurbCTAVeTGztbI0jaVXfh6A3fUYERfHY1QxQ-TGuZe-.jpg?size=691x743&quality=96&type=album",            "Song",            "https://cdndl.zaycev.net/track/24537423/6JjNMqkDhKRP4J3YaBwXKdxGsrQA7ahgBvfkkjq4jQXC1Kvc3243CXMRehYsvgmQRCoov7QmhCJR91raPAHKDHt5WjkER2FpyCsBa3Cfw2GBtyHov6TJP4zNSkdqWbQfpD7qBQG5fcrndtL36NVMJpFXt1kDUzURCshH4MEArno943C9mdYdrsebfCrazsf9C9G1pkCSdG2B11eMDkABc24eC35DwNc1MCQ7e248iopzGfw6h6XDWnVKgJDLTf2uwbskxk79SEuviiLAJC8ycTH1uixamva7mGgMQqzUVJJ25BMZnmznmvyxXNUXeK5MSz9WV2ttftmBVAdVV19n4HpVb9RfGK"        )        val mutableListOf = ArrayList<SongModel>(20)        for (i in 0..20) {            mutableListOf.add(tracks.copy(title = "Song $i", artist = "Various Artist $albumId"))        }        return SongsJSON(album, mutableListOf)    }    private fun getLibrarySongs(albumId: Long): SongsJSON {        val album = AlbumModel(            albumId,            "https://sun9-north.userapi.com/sun9-81/s/v1/ig2/wIL_XF8XNjbnczI7IwIec_w6FmZOxXPJLGrtMVEH7OnXTUqOpY2t_2Qt4wgHBECL8CipxHTG7bxwC35GPpsSMakE.jpg?size=1080x1054&quality=96&type=album",            "Album",            20        )        val tracks = SongModel(            "Various Artist",            "https://sun9-west.userapi.com/sun9-2/s/v1/if1/ELkV8qAJ8XGh7ZXvLfXEY36qJDxMa5eRUX6khczeuWne2YDIjGf1OtCyqLMfdUlM3QjDx0f7.jpg?size=388x288&quality=96&type=album",            "Song",            "https://cdndl.zaycev.net/track/6717082/BYufGCwrQ5ZtKQtTUuS685HFEvpi2BqQCpKSuBbzixSa97t9Gj1esKyv4mAHT816UwrKhByKR9Vb7iHJuEWXPLqDkWhpnBtqMYBvJqzDRTQ1fSnR5XXb9kt3XDsxXJV5BXCQXUq2hL15wMpNnxQnPJFbmZ4zPRyTExUYnX9o5pLkfQHKdSiUXRXoTEHv2yjgfQCdvKWcq5q7xEVZrMUAShiQoTTJgHM1mPcDaZocJfNiAz3FoZbu1PHTmUhJxYAY5EUpHjs4dapT2d18BV5TuGmtirHL2F6pXLsQFuTfLEqGPGSQGgPZuwKoz4i35gQdJKLeaoTpoLQndqjjyDJKCu9SeC16Ki"        )        val mutableListOf = ArrayList<SongModel>(20)        for (i in 0..20) {            mutableListOf.add(tracks.copy(title = "Song $i", artist = "Various Artist $albumId"))        }        return SongsJSON(album, mutableListOf)    }}